x-common-env: &common-env
  FLASK_CONFIG: production
  DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
  CELERY_BROKER_URL: amqp://${RABBIT_USERNAME}:${RABBIT_USER_PASSWORD}@rabbit:5672/
  CELERY_RESULT_BACKEND: db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
  SIGNALING_SERVER: signaling-server
  VIDEO_SOURCE: ${VIDEO_SOURCE}
  AUDIO_SOURCE: ${AUDIO_SOURCE}
  SECRET_KEY: ${SECRET_KEY}
  WEBRTC_URI: ws://signaling-server:8443
  FLOWER_PORT: ${FLOWER_PORT}
  FLASK_PORT: ${FLASK_PORT}

x-app-base: &app-base
  build:
    context: ./StreamerApp
    dockerfile: ./docker/prod/Dockerfile
  environment: *common-env
  devices:
    - /dev/:/dev/
    - /dev/snb:/dev/snb
  volumes:
    - /lib/modules:/lib/modules
  group_add:
    - video
    - audio
  privileged: true
  depends_on:
    - postgres
    - signaling-server
  networks:
    - webrtc-network
    - proxy-server
    - database
    - messages

services:
  web:
    <<: *app-base
    command: /start.sh

  worker:
    <<: *app-base
    command: /worker.sh

  flower:
    <<: *app-base
    command: /flower.sh
    ports:
      - ${FLOWER_PORT}:${FLOWER_PORT}

  nginx:
    build:
      context: ./nginx
    ports:
      - 80:80
    depends_on:
      - web
    networks:
      - proxy-server

  signaling-server:
    build:
      context: ./signalling-server
    ports:
      - 8443:8443
    environment:
      - WEBRTCSINK_SIGNALLING_SERVER_LOG=info
    networks:
      - webrtc-network

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./postgres-data/postgres:/var/lib/postgresql/data
    networks:
      - database

  rabbit:
    build: ./rabbit
    environment:
      - RABBIT_USERNAME=${RABBIT_USERNAME}
      - RABBIT_USER_PASSWORD=${RABBIT_USER_PASSWORD}
    networks:
      - messages
      - database

networks:
  webrtc-network:
    driver: bridge
  database:
    driver: bridge
  proxy-server:
    driver: bridge
  messages:
    driver: bridge
